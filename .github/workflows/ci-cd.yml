# name: CI/CD Pipeline
# on:
#   push:
#     branches:
#       - main
#       - develop
#   pull_request:
#     branches:
#       - main
#       - develop
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           java-version: '17'
#       - name: Build with Maven
#         run: mvn clean package
#       - name: Build Docker image
#         run: docker build -t microservices:${{ github.sha }} .
#       - name: Push to JFrog
#         env:
#           JFROG_URL: ${{ secrets.JFROG_URL }}
#           JFROG_USER: ${{ secrets.JFROG_USER }}
#           JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
#         run: |
#           echo $JFROG_PASSWORD | docker login $JFROG_URL -u $JFROG_USER --password-stdin
#           docker tag microservices:${{ github.sha }} $JFROG_URL/microservices:${{ github.sha }}
#           docker push $JFROG_URL/microservices:${{ github.sha }}
#       - name: Set Deploy Environment
#         id: setenv
#         run: |
#           if [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
#             echo "env=prod" >> $GITHUB_OUTPUT
#           elif [[ "$GITHUB_REF" == "refs/heads/qa" ]]; then
#             echo "env=qa" >> $GITHUB_OUTPUT
#           else
#             echo "env=dev" >> $GITHUB_OUTPUT
#           fi
#       - name: Deploy to Kubernetes
#         run: kubectl apply -f k8s/${{ steps.setenv.outputs.env }}/
